var stopWords={'a':true,'about':true,'above':true,'across':true,'after':true,'again':true,'against':true,'all':true,'almost':true,'alone':true,'along':true,'already':true,'also':true,'although':true,'always':true,'among':true,'an':true,'and':true,'another':true,'any':true,'anybody':true,'anyone':true,'anything':true,'anywhere':true,'are':true,'area':true,'areas':true,'around':true,'as':true,'ask':true,'asked':true,'asking':true,'asks':true,'at':true,'away':true,'b':true,'back':true,'backed':true,'backing':true,'backs':true,'be':true,'became':true,'because':true,'become':true,'becomes':true,'been':true,'before':true,'began':true,'behind':true,'being':true,'beings':true,'best':true,'better':true,'between':true,'big':true,'both':true,'but':true,'by':true,'c':true,'came':true,'can':true,'cannot':true,'case':true,'cases':true,'certain':true,'certainly':true,'clear':true,'clearly':true,'come':true,'could':true,'d':true,'did':true,'differ':true,'different':true,'differently':true,'do':true,'does':true,'done':true,'down':true,'down':true,'downed':true,'downing':true,'downs':true,'during':true,'e':true,'each':true,'early':true,'either':true,'end':true,'ended':true,'ending':true,'ends':true,'enough':true,'even':true,'evenly':true,'ever':true,'every':true,'everybody':true,'everyone':true,'everything':true,'everywhere':true,'f':true,'face':true,'faces':true,'fact':true,'facts':true,'far':true,'felt':true,'few':true,'find':true,'finds':true,'first':true,'for':true,'four':true,'from':true,'full':true,'fully':true,'further':true,'furthered':true,'furthering':true,'furthers':true,'g':true,'gave':true,'general':true,'generally':true,'get':true,'gets':true,'give':true,'given':true,'gives':true,'go':true,'going':true,'good':true,'goods':true,'got':true,'great':true,'greater':true,'greatest':true,'group':true,'grouped':true,'grouping':true,'groups':true,'h':true,'had':true,'has':true,'have':true,'having':true,'he':true,'her':true,'here':true,'herself':true,'high':true,'high':true,'high':true,'higher':true,'highest':true,'him':true,'himself':true,'his':true,'how':true,'however':true,'i':true,'if':true,'important':true,'in':true,'interest':true,'interested':true,'interesting':true,'interests':true,'into':true,'is':true,'it':true,'its':true,'itself':true,'j':true,'just':true,'k':true,'keep':true,'keeps':true,'kind':true,'knew':true,'know':true,'known':true,'knows':true,'l':true,'large':true,'largely':true,'last':true,'later':true,'latest':true,'least':true,'less':true,'let':true,'lets':true,'like':true,'likely':true,'long':true,'longer':true,'longest':true,'m':true,'made':true,'make':true,'making':true,'man':true,'many':true,'may':true,'me':true,'member':true,'members':true,'men':true,'might':true,'more':true,'most':true,'mostly':true,'mr':true,'mrs':true,'much':true,'must':true,'my':true,'myself':true,'n':true,'necessary':true,'need':true,'needed':true,'needing':true,'needs':true,'never':true,'new':true,'new':true,'newer':true,'newest':true,'next':true,'no':true,'nobody':true,'non':true,'noone':true,'not':true,'nothing':true,'now':true,'nowhere':true,'number':true,'numbers':true,'o':true,'of':true,'off':true,'often':true,'old':true,'older':true,'oldest':true,'on':true,'once':true,'one':true,'only':true,'open':true,'opened':true,'opening':true,'opens':true,'or':true,'order':true,'ordered':true,'ordering':true,'orders':true,'other':true,'others':true,'our':true,'out':true,'over':true,'p':true,'part':true,'parted':true,'parting':true,'parts':true,'per':true,'perhaps':true,'place':true,'places':true,'point':true,'pointed':true,'pointing':true,'points':true,'possible':true,'present':true,'presented':true,'presenting':true,'presents':true,'problem':true,'problems':true,'put':true,'puts':true,'q':true,'quite':true,'r':true,'rather':true,'really':true,'right':true,'right':true,'room':true,'rooms':true,'s':true,'said':true,'same':true,'saw':true,'say':true,'says':true,'second':true,'seconds':true,'see':true,'seem':true,'seemed':true,'seeming':true,'seems':true,'sees':true,'several':true,'shall':true,'she':true,'should':true,'show':true,'showed':true,'showing':true,'shows':true,'side':true,'sides':true,'since':true,'small':true,'smaller':true,'smallest':true,'so':true,'some':true,'somebody':true,'someone':true,'something':true,'somewhere':true,'state':true,'states':true,'still':true,'still':true,'such':true,'sure':true,'t':true,'take':true,'taken':true,'than':true,'that':true,'the':true,'their':true,'them':true,'then':true,'there':true,'therefore':true,'these':true,'they':true,'thing':true,'things':true,'think':true,'thinks':true,'this':true,'those':true,'though':true,'thought':true,'thoughts':true,'three':true,'through':true,'thus':true,'to':true,'today':true,'together':true,'too':true,'took':true,'toward':true,'turn':true,'turned':true,'turning':true,'turns':true,'two':true,'u':true,'under':true,'until':true,'up':true,'upon':true,'us':true,'use':true,'used':true,'uses':true,'v':true,'very':true,'w':true,'want':true,'wanted':true,'wanting':true,'wants':true,'was':true,'way':true,'ways':true,'we':true,'well':true,'wells':true,'went':true,'were':true,'what':true,'when':true,'where':true,'whether':true,'which':true,'while':true,'who':true,'whole':true,'whose':true,'why':true,'will':true,'with':true,'within':true,'without':true,'work':true,'worked':true,'working':true,'works':true,'would':true,'x':true,'y':true,'year':true,'years':true,'yet':true,'you':true,'young':true,'younger':true,'youngest':true,'your':true,'yours':true,'z':true};var abbrevations={Abbrev:true,Abd:true,Aberd:true,Aberdeensh:true,abl:true,Abol:true,Aborig:true,Abp:true,Abr:true,Abridg:true,Abridgem:true,absol:true,Absol:true,Abst:true,abstr:true,Abstr:true,Acad:true,acc:true,acc:true,Acc:true,Accept:true,Accomm:true,Accompl:true,Accs:true,Acct:true,Accts:true,accus:true,Achievem:true,A:true,D:true,ad:true,Add:true,Addit:true,Addr:true,adj:true,adj:true,phr:true,adjs:true,Adm:true,Adm:true,Admin:true,Admir:true,Admon:true,Admonit:true,adv:true,Adv:true,Adv:true,Adv:true,Adv:true,Adv:true,Advancem:true,advb:true,Advert:true,Advoc:true,advs:true,Advt:true,Advts:true,Aerodynam:true,Aeronaut:true,Aff:true,Affect:true,Affect:true,Afr:true,Agric:true,agst:true,Alch:true,Alg:true,Alleg:true,Allit:true,Alm:true,Alph:true,alt:true,Amer:true,Anal:true,Analyt:true,Anat:true,Anc:true,Anecd:true,Ang:true,Angl:true,Ind:true,Anim:true,Ann:true,Ann:true,Anniv:true,Annot:true,Anon:true,Answ:true,Ant:true,Anthrop:true,Anthropol:true,Antiq:true,aphet:true,Apoc:true,Apol:true,app:true,App:true,Appl:true,Applic:true,appos:true,Apr:true,Arab:true,Arb:true,arch:true,Arch:true,Arch:true,Archaeol:true,Archipel:true,Archit:true,Argt:true,Arith:true,Arithm:true,Arrangem:true,art:true,Artic:true,Artific:true,Artill:true,Ashm:true,Assemb:true,Assoc:true,Assoc:true,Assyriol:true,Astr:true,Astrol:true,Astron:true,Astronaut:true,Att:true,attrib:true,Attrib:true,Aug:true,Austral:true,Auth:true,Autobiog:true,Autobiogr:true,A:true,V:true,Ayrsh:true,Bacteriol:true,B:true,C:true,B:true,C:true,Bedford:true,Bedfordsh:true,bef:true,Dr:true,Belg:true,Berks:true,Berksh:true,Berw:true,Berwicksh:true,betw:true,Bibliogr:true,Biochem:true,Biog:true,Biogr:true,Biol:true,Bk:true,Bks:true,Bord:true,Bot:true,Bp:true,Braz:true,Brit:true,Bucks:true,Build:true,Bull:true,Bur:true,c:true,C:true,Cal:true,Calc:true,Calend:true,Calif:true,Calligr:true,Camb:true,Cambr:true,Campanol:true,Canad:true,Canterb:true,Capt:true,Cartogr:true,Catal:true,Catech:true,Cath:true,cent:true,Cent:true,Cent:true,Ceram:true,Cert:true,Certif:true,cf:true,Ch:true,Chamb:true,Char:true,Charac:true,Chas:true,Chem:true,Engin:true,Chem:true,Chesh:true,Ch:true,Hist:true,Chr:true,Chr:true,Chron:true,Chron:true,Chronol:true,Chrons:true,Cinematogr:true,Circ:true,Civ:true,Engin:true,cl:true,Cl:true,Class:true,Antiq:true,Class:true,Classif:true,Climatol:true,Clin:true,cogn:true,w:true,Col:true,Col:true,Coll:true,Coll:true,collect:true,Collect:true,colloq:true,Colloq:true,Coloss:true,Com:true,Com:true,Comb:true,comb:true,Combs:true,Comm:true,Comm:true,Comm:true,Comm:true,Comm:true,Commandm:true,Commend:true,Commerc:true,Commiss:true,Comm:true,Commonw:true,Communic:true,comp:true,comp:true,Comp:true,Comp:true,Compan:true,Comp:true,Anat:true,compar:true,Compar:true,Compend:true,compl:true,Compl:true,Compos:true,conc:true,Conc:true,Conch:true,Concl:true,concr:true,Conf:true,Conf:true,Confid:true,Confl:true,Confut:true,Congr:true,Congreg:true,Congress:true,conj:true,conj:true,Conn:true,cons:true,Consc:true,Consecr:true,Consid:true,Consol:true,const:true,Constit:true,Hist:true,Constit:true,Constr:true,Contemp:true,Contempl:true,contempt:true,Contend:true,Content:true,Contin:true,contr:true,contr:true,Contradict:true,Contrib:true,Controv:true,Controv:true,Conv:true,Convent:true,Conversat:true,Convoc:true,Cor:true,Cornw:true,Coron:true,Corr:true,corresp:true,Corresp:true,Counc:true,Courtsh:true,cpd:true,Craniol:true,Craniom:true,Crim:true,Crim:true,Crit:true,Crit:true,Crt:true,Crts:true,Cryptogr:true,Crystallogr:true,Ct:true,Ct:true,Cumb:true,Cumberld:true,Cumbld:true,Cycl:true,Cytol:true,Dan:true,dat:true,Dau:true,D:true,C:true,Deb:true,Dec:true,Declar:true,Ded:true,Ded:true,def:true,def:true,Def:true,Deliv:true,dem:true,Demonstr:true,Dep:true,Dep:true,Depred:true,Depredat:true,Dept:true,Derbysh:true,deriv:true,derog:true,Descr:true,Deut:true,Devel:true,Devonsh:true,dial:true,Dial:true,Dict:true,Diffic:true,dim:true,Direct:true,Dis:true,Disc:true,Discipl:true,Discov:true,Discrim:true,Discuss:true,Diss:true,Dist:true,Distemp:true,Distill:true,Distrib:true,Div:true,Div:true,Divers:true,Dk:true,Doc:true,Doctr:true,Domest:true,Durh:true,dyslog:true,e:true,E:true,E:true,Afr:true,E:true,Angl:true,E:true,Ind:true,east:true,Eccl:true,Eccl:true,Eccles:true,Eccles:true,Eccl:true,Hist:true,Eccl:true,Ecclus:true,Ecol:true,Econ:true,ed:true,Ed:true,Ed:true,E:true,D:true,D:true,Edin:true,Edinb:true,Educ:true,Edw:true,E:true,E:true,T:true,S:true,Egypt:true,Egyptol:true,E:true,Ind:true,Electr:true,Electr:true,Engin:true,magn:true,physiol:true,Elem:true,Eliz:true,Elizab:true,ellipt:true,Emb:true,Embryol:true,e:true,midl:true,emph:true,Encycl:true,Encycl:true,Brit:true,Encycl:true,Metrop:true,Eng:true,Engin:true,Englishw:true,Enq:true,Ent:true,Enthus:true,Entom:true,Entomol:true,Enzymol:true,Ep:true,Eph:true,Ephes:true,Epil:true,Episc:true,Epist:true,Epit:true,Equip:true,erron:true,Esd:true,esp:true,Ess:true,Essent:true,Establ:true,Esth:true,Ethnol:true,etym:true,etymol:true,Etymol:true,euphem:true,Eval:true,Evang:true,Even:true,Evid:true,Evol:true,Ex:true,doc:true,Exalt:true,Exam:true,exc:true,Exch:true,Exch:true,Exec:true,Exec:true,Exerc:true,Exhib:true,Exod:true,Exped:true,Exper:true,Explan:true,Explic:true,Explor:true,Expos:true,Ezek:true,f:true,f:true,Fab:true,fam:true,Fam:true,famil:true,Farew:true,Feb:true,fem:true,Ff:true,Fifesh:true,fig:true,fl:true,Footpr:true,Forfarsh:true,Fortif:true,Fortn:true,Found:true,Fr:true,Fr:true,Fr:true,Fragm:true,Fratern:true,freq:true,Friendsh:true,Fund:true,Furnit:true,fut:true,Gal:true,Gard:true,Gastron:true,Gaz:true,Gd:true,gen:true,gen:true,Gen:true,Gen:true,Geo:true,Geog:true,Geogr:true,Geol:true,Geom:true,Geomorphol:true,Ger:true,gerund:true,Glac:true,Glasg:true,Glos:true,Gloss:true,Glouc:true,Gloucestersh:true,Gosp:true,Gov:true,Govt:true,Gr:true,Gram:true,Gramm:true,Gt:true,Gynaecol:true,Hab:true,Haematol:true,Hag:true,Hampsh:true,Handbk:true,Hants:true,Heb:true,Heb:true,Hebr:true,Hen:true,Her:true,Herb:true,Heref:true,Hereford:true,Herefordsh:true,Hertfordsh:true,Hierogl:true,hist:true,Hist:true,Histol:true,Hom:true,Horol:true,Hort:true,Hos:true,Hosp:true,Househ:true,Housek:true,Husb:true,Hydraul:true,Hydrol:true,Ichth:true,Icthyol:true,Ideol:true,Idol:true,Illustr:true,Imag:true,imit:true,Immunol:true,imp:true,imperf:true,impers:true,impf:true,Impr:true,Impr:true,Impr:true,improp:true,Inaug:true,Inclos:true,Ind:true,ind:true,ind:true,Ind:true,indef:true,indic:true,indir:true,Industr:true,Industr:true,Rel:true,infin:true,infl:true,Infl:true,Innoc:true,Inorg:true,Inq:true,Inst:true,instr:true,Instr:true,int:true,Intell:true,Intellect:true,Interc:true,interj:true,Interl:true,Internat:true,Interpr:true,interrog:true,intr:true,intrans:true,Intro:true,Introd:true,Inv:true,Invent:true,Invent:true,Invertebr:true,Invert:true,Zool:true,Investig:true,Investm:true,Invoc:true,Ir:true,Irel:true,iron:true,irreg:true,Isa:true,Ital:true,Jahrb:true,Jam:true,Jam:true,Jan:true,Jap:true,Jas:true,Jas:true,Jer:true,joc:true,Josh:true,Jrnl:true,Jrnls:true,Jud:true,Judg:true,Jul:true,Jun:true,Jun:true,Jurisd:true,Jurisdict:true,Jurispr:true,Justif:true,Justific:true,K:true,Kent:true,Kgs:true,Div:true,Kingd:true,Knowl:true,Kpr:true,l:true,Lab:true,Lam:true,Lament:true,Lanc:true,Lancash:true,Lancs:true,Lang:true,Langs:true,Lat:true,Ld:true,Lds:true,Lect:true,Leechd:true,Leg:true,Leicest:true,Leicester:true,Leicestersh:true,Leics:true,Let:true,Lett:true,Lev:true,Lex:true,Libr:true,Limnol:true,Lincolnsh:true,Lincs:true,Ling:true,Linn:true,lit:true,Lit:true,Lithogr:true,Lithol:true,Liturg:true,ll:true,Lond:true,m:true,Macc:true,Mach:true,Mag:true,Magn:true,Mal:true,Man:true,Managem:true,Manch:true,Manip:true,Manuf:true,Mar:true,masc:true,Mass:true,Math:true,Matt:true,Meas:true,Measurem:true,Mech:true,med:true,Med:true,Medit:true,Mem:true,Merc:true,Merch:true,Metall:true,Metallif:true,Metallogr:true,Metallogr:true,Metamorph:true,Metaph:true,metaphor:true,Meteorol:true,Meth:true,metr:true,gr:true,Metrop:true,Mex:true,Mic:true,Mich:true,Microbiol:true,Microsc:true,midl:true,Mil:true,Milit:true,Min:true,Mineral:true,Misc:true,Miscell:true,mispr:true,mod:true,Mod:true,Monum:true,Morphol:true,MS:true,MSS:true,Mt:true,Mtg:true,Mts:true,Munic:true,Munif:true,Munim:true,Mus:true,Mus:true,Myst:true,Myth:true,Mythol:true,n:true,n:true,n:true,N:true,N:true,Afr:true,Nah:true,N:true,Amer:true,Narr:true,Narrat:true,Nat:true,Nat:true,Hist:true,Nat:true,Philos:true,Nat:true,Sci:true,Naut:true,Nav:true,Nav:true,Navig:true,N:true,N:true,n:true,e:true,N:true,E:true,N:true,E:true,D:true,Neh:true,Neighb:true,Nerv:true,Neurol:true,Neurosurg:true,Hampsh:true,Newc:true,Newspr:true,N:true,Ir:true,N:true,Irel:true,No:true,nom:true,conf:true,wd:true,Nonconf:true,Norf:true,north:true,Northamptonsh:true,Northants:true,Northumb:true,Northumbld:true,Northumbr:true,Norw:true,Norweg:true,Notts:true,Nov:true,ns:true,N:true,S:true,N:true,S:true,W:true,N:true,T:true,Nucl:true,Num:true,Numism:true,n:true,w:true,N:true,W:true,N:true,Y:true,N:true,Z:true,Obad:true,Obed:true,obj:true,Obj:true,obl:true,obs:true,Obs:true,Observ:true,Obstet:true,Obstetr:true,Obstetr:true,Med:true,occas:true,Occas:true,Occup:true,Occurr:true,Oceanogr:true,Oct:true,O:true,E:true,D:true,Off:true,Offic:true,Okla:true,Ont:true,Ophthalm:true,Ophthalmol:true,opp:true,Oppress:true,Opt:true,Orac:true,Ord:true,Ord:true,Org:true,Organ:true,Chem:true,Org:true,Chem:true,orig:true,Orig:true,Orkn:true,Ornith:true,Ornithol:true,Orthogr:true,O:true,T:true,Outl:true,Oxf:true,Oxfordsh:true,Oxon:true,p:true,pa:true,Pa:true,Palaeobot:true,Palaeogr:true,Palaeont:true,Palaeontol:true,pa:true,pple:true,Paraphr:true,Parasitol:true,Parl:true,Parnass:true,pass:true,pa:true,t:true,Path:true,Pathol:true,Peculat:true,Penins:true,perf:true,Perf:true,perh:true,Periodontol:true,pers:true,Pers:true,Pers:true,Persec:true,personif:true,Perthsh:true,Pet:true,Petrogr:true,Petrol:true,pf:true,Pharm:true,Pharmaceut:true,Pharmacol:true,Phil:true,Phil:true,Philad:true,Philem:true,Philipp:true,Philol:true,Philos:true,Phoen:true,phonet:true,Phonol:true,Photog:true,Photogr:true,phr:true,Phrenol:true,Phys:true,Chem:true,Geogr:true,Physiogr:true,Physiol:true,Pict:true,Pict:true,pl:true,plur:true,poet:true,Poet:true,Pol:true,Pol:true,Econ:true,Polit:true,Polytechn:true,pop:true,Pop:true,Porc:true,Port:true,poss:true,poss:true,Posth:true,Postm:true,Pott:true,ppl:true,ppl:true,a:true,ppl:true,adj:true,ppl:true,adjs:true,pple:true,pples:true,P:true,R:true,pr:true,Pract:true,Pract:true,prec:true,pred:true,predic:true,Predict:true,pref:true,Pref:true,Preh:true,Prehist:true,prep:true,Prerog:true,pres:true,Pres:true,Presb:true,Presb:true,Preserv:true,pres:true,pple:true,Prim:true,Princ:true,Print:true,priv:true,prob:true,Probab:true,Probl:true,Proc:true,Prod:true,Prol:true,pron:true,pron:true,pronunc:true,Pronunc:true,prop:true,Prop:true,propr:true,Pros:true,prov:true,Prov:true,Prov:true,Provid:true,Provinc:true,Provis:true,pr:true,pple:true,Ps:true,arch:true,dial:true,Sc:true,Psych:true,Psychoanal:true,Psychoanalyt:true,Psychol:true,Psychopathol:true,Pt:true,Publ:true,Publ:true,Purg:true,Q:true,Q:true,Q:true,Eliz:true,Qld:true,Mech:true,Div:true,quot:true,quots:true,q:true,v:true,R:true,Radiol:true,R:true,A:true,F:true,R:true,C:true,R:true,C:true,Reas:true,Reb:true,Rebell:true,Rec:true,Reclam:true,Recoll:true,Redempt:true,redupl:true,Ref:true,Ref:true,refash:true,refl:true,Refl:true,Refus:true,Refut:true,reg:true,Reg:true,Regic:true,Regist:true,Regr:true,rel:true,rel:true,Rel:true,Relig:true,Reminisc:true,Remonstr:true,Renfrewsh:true,Rep:true,repr:true,Reprod:true,Rept:true,Repub:true,Res:true,Resid:true,Ret:true,Retrosp:true,Rev:true,Rev:true,Rev:true,Revol:true,Rhet:true,rhet:true,Isl:true,Rich:true,R:true,N:true,Rom:true,Rom:true,Rom:true,Antiq:true,sh:true,Roxb:true,Roy:true,Rudim:true,Russ:true,s:true,S:true,S:true,Afr:true,Sam:true,Sask:true,Sat:true,Sax:true,sc:true,Sc:true,Scand:true,S:true,Sch:true,Sci:true,Scot:true,Scotl:true,Script:true,Sculpt:true,S:true,s:true,e:true,S:true,E:true,Seismol:true,Sel:true,Sel:true,comm:true,Select:true,Sept:true,Ser:true,Serm:true,Sess:true,Settlem:true,Sev:true,Shakes:true,Shaks:true,Sheph:true,Shetl:true,Shropsh:true,sing:true,Soc:true,Sociol:true,Som:true,Sol:true,Sol:true,Sonn:true,south:true,sp:true,Span:true,spec:true,Spec:true,Spec:true,Specif:true,Specim:true,Spectrosc:true,SS:true,St:true,St:true,Staff:true,Stafford:true,Staffordsh:true,Staffs:true,Stand:true,Stat:true,Statist:true,Exch:true,str:true,Stratigr:true,Struct:true,S:true,T:true,S:true,Stud:true,subj:true,subj:true,Subj:true,subjunct:true,subord:true,subord:true,cl:true,Subscr:true,Subscript:true,subseq:true,subst:true,suff:true,Suff:true,superl:true,Suppl:true,Supplic:true,Suppress:true,Surg:true,Surv:true,Sus:true,s:true,v:true,s:true,w:true,S:true,W:true,syll:true,Symmetr:true,Symp:true,Syst:true,t:true,Taxon:true,techn:true,Techn:true,Technol:true,Tel:true,Telecomm:true,Telegr:true,Telegr:true,Teleph:true,Teratol:true,Terminol:true,Terrestr:true,Test:true,Textbk:true,Theat:true,Theatr:true,Theol:true,Theoret:true,Thermonucl:true,Thes:true,Thess:true,Tim:true,Tit:true,Topogr:true,tr:true,Trad:true,Trag:true,trans:true,Trans:true,transf:true,transl:true,Transl:true,Transubstant:true,Trav:true,Treas:true,Treat:true,Treatm:true,Trib:true,Trig:true,Trigonom:true,Trop:true,Troub:true,Troubl:true,Typog:true,Typogr:true,U:true,K:true,ult:true,Univ:true,unkn:true,Unnat:true,Unoffic:true,unstr:true,Urin:true,U:true,S:true,U:true,S:true,A:true,F:true,U:true,S:true,S:true,R:true,usu:true,Utilit:true,v:true,Va:true,Vac:true,Valedict:true,var:true,varr:true,vars:true,vb:true,vbl:true,vbl:true,n:true,vbl:true,ns:true,vbs:true,Veg:true,Veg:true,Phys:true,Veg:true,Physiol:true,Venet:true,Vertebr:true,Vet:true,Vet:true,Med:true,Vet:true,Path:true,Vet:true,Sci:true,Vet:true,Surg:true,Vic:true,Vict:true,Vind:true,Vindic:true,Virg:true,Virol:true,viz:true,Voc:true,Vocab:true,Vol:true,Vols:true,Voy:true,vulg:true,Vulg:true,Vulg:true,w:true,W:true,W:true,Afr:true,Warwicksh:true,wd:true,Wd:true,west:true,Westm:true,Westmld:true,Westmorld:true,Westmrld:true,Will:true,Wilts:true,Wiltsh:true,W:true,Ind:true,W:true,Wis:true,Wisd:true,Wisd:true,wk:true,Wk:true,Wk:true,Wkly:true,Wks:true,Wonderf:true,Worc:true,Worcestersh:true,Worcs:true,Writ:true,W:true,Va:true,Yearbk:true,Yng:true,Yorks:true,Yorksh:true,Yr:true,Yrs:true,Zech:true,Zeitschr:true,Zeph:true,Zoogeogr:true,Zool:true,mr:true,mrs:true};var statmentDelimeters=/\(?[^\.\?\!\d+\.\d+]+[\.!\?\d+\.\d+]*\)?/gim;var tokenDelimeters=/\s+|,|\+|\-|\.(?!\d+)|\@|\||\?|\!/;function IsDefined(instance)
{return instance!=null&&instance!=undefined&&typeof instance!=undefined;}
function IsNullOREmpty(instance)
{return instance==null||instance==undefined||typeof instance==undefined||instance.trim()=="";}
function IsTokenNumber(token)
{return token!=null&&token.match(/^\d+$/)!=null;}
class DisJointSet
{constructor()
{this.parent=[];this.rank=[];this.SetsHeaader=[];}
createset(sentenceIndex)
{if(!this.parent[sentenceIndex])
{this.parent[sentenceIndex]=sentenceIndex;}}
AssignSetHeader(parentSetIndex,sentenceIndex,value)
{if(typeof(sentenceIndex)=="Sentence")
{console.log(parentSetIndex);}
if(typeof this.SetsHeaader[parentSetIndex]==undefined||value>this.SetsHeaader[parent])
{this.SetsHeaader[parentSetIndex]=sentenceIndex;}}
find(value)
{if(typeof this.parent[value]=='undefined')
{this.parent[value]=value;this.SetsHeaader[value]=value;return value;}
else if(this.parent[value]==value)
{return value;}
else{var result=this.find(this.parent[value]);this.parent[value]=result;this.rank[result]-=1;return result;}}
join(firstStatmentIndex,secondStatmentIndex)
{var firstStatmentParent=this.find(firstStatmentIndex);var secondStatmentParent=this.find(secondStatmentIndex);var firstParentRank=this.rank[firstStatmentParent];var secondParentRank=this.rank[secondStatmentParent];var parentIndex=0;if((!IsDefined(firstParentRank)&&!IsDefined(secondParentRank))||firstParentRank==secondParentRank)
{this.parent[secondStatmentIndex]=firstStatmentIndex;delete this.SetsHeaader[secondStatmentIndex];if(!IsDefined(this.rank[firstStatmentIndex]))
{this.rank[firstStatmentIndex]=0;}
this.rank[firstStatmentIndex]+=1;parentIndex=firstStatmentIndex;}
else if(firstParentRank>secondParentRank||!IsDefined(secondParentRank)){this.parent[secondStatmentIndex]=firstStatmentIndex;delete this.SetsHeaader[secondStatmentIndex];parentIndex=firstStatmentIndex;}
else if(secondParentRank>firstParentRank||!IsDefined(firstParentRank))
{this.parent[firstStatmentIndex]=secondStatmentIndex;delete this.SetsHeaader[firstStatmentIndex];parentIndex=secondStatmentIndex;}
return parentIndex;}}
class Document
{constructor()
{this.value="";this.terms={};this.length=0;this.setIndex=0;this.isEndedProperly=null;}
getTermByIndex(targetIndex)
{var counter=0;for(var index in this.terms)
{if(counter++==targetIndex)
{return this.terms[index];}}}}
class Token
{constructor()
{this.value="";this.weight=0;this.documentFreq=null;this.stem=null;this.frequency=0;}}
var TermType={NormalText:1,Abbreviation:2};var step2list={"ational":"ate","tional":"tion","enci":"ence","anci":"ance","izer":"ize","bli":"ble","alli":"al","entli":"ent","eli":"e","ousli":"ous","ization":"ize","ation":"ate","ator":"ate","alism":"al","iveness":"ive","fulness":"ful","ousness":"ous","aliti":"al","iviti":"ive","biliti":"ble","logi":"log"};var step3list={"icate":"ic","ative":"","alize":"al","iciti":"ic","ical":"ic","ful":"","ness":""};var c="[^aeiou]";var v="[aeiouy]";var C=c+"[^aeiouy]*";var V=v+"[aeiou]*";var mgr0="^("+C+")?"+V+C;var meq1="^("+C+")?"+V+C+"("+V+")?$";var mgr1="^("+C+")?"+V+C+V+C;var s_v="^("+C+")?"+v;function stemmer(w){var stem;var suffix;var firstch;var re;var re2;var re3;var re4;var origword=w;if(w.length<3){return w;}
firstch=w.substr(0,1);if(firstch=="y"){w=firstch.toUpperCase()+w.substr(1);}
re=/^(.+?)(ss|i)es$/;re2=/^(.+?)([^s])s$/;if(re.test(w)){w=w.replace(re,"$1$2");}
else if(re2.test(w)){w=w.replace(re2,"$1$2");}
re=/^(.+?)eed$/;re2=/^(.+?)(ed|ing)$/;if(re.test(w)){var fp=re.exec(w);re=new RegExp(mgr0);if(re.test(fp[1])){re=/.$/;w=w.replace(re,"");}}else if(re2.test(w)){var fp=re2.exec(w);stem=fp[1];re2=new RegExp(s_v);if(re2.test(stem)){w=stem;re2=/(at|bl|iz)$/;re3=new RegExp("([^aeiouylsz])\\1$");re4=new RegExp("^"+C+v+"[^aeiouwxy]$");if(re2.test(w)){w=w+"e";}
else if(re3.test(w)){re=/.$/;w=w.replace(re,"");}
else if(re4.test(w)){w=w+"e";}}}
re=/^(.+?)y$/;if(re.test(w)){var fp=re.exec(w);stem=fp[1];re=new RegExp(s_v);if(re.test(stem)){w=stem+"i";}}
re=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;if(re.test(w)){var fp=re.exec(w);stem=fp[1];suffix=fp[2];re=new RegExp(mgr0);if(re.test(stem)){w=stem+step2list[suffix];}}
re=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;if(re.test(w)){var fp=re.exec(w);stem=fp[1];suffix=fp[2];re=new RegExp(mgr0);if(re.test(stem)){w=stem+step3list[suffix];}}
re=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;re2=/^(.+?)(s|t)(ion)$/;if(re.test(w)){var fp=re.exec(w);stem=fp[1];re=new RegExp(mgr1);if(re.test(stem)){w=stem;}}else if(re2.test(w)){var fp=re2.exec(w);stem=fp[1]+fp[2];re2=new RegExp(mgr1);if(re2.test(stem)){w=stem;}}
re=/^(.+?)e$/;if(re.test(w)){var fp=re.exec(w);stem=fp[1];re=new RegExp(mgr1);re2=new RegExp(meq1);re3=new RegExp("^"+C+v+"[^aeiouwxy]$");if(re.test(stem)||(re2.test(stem)&&!(re3.test(stem)))){w=stem;}}
re=/ll$/;re2=new RegExp(mgr1);if(re.test(w)&&re2.test(w)){re=/.$/;w=w.replace(re,"");}
if(firstch=="y"){w=firstch.toLowerCase()+w.substr(1);}
return w;}
var memo={};var memoizingStemmer=function(w){if(!memo[w]){memo[w]=stemmer(w);}
return memo[w];}
class TDMATRIX
{constructor()
{}
GetDistance(sourceSentence,destSentence)
{if(!IsDefined(sourceSentence)||!IsDefined(destSentence)||!IsDefined(sourceSentence.terms)||!IsDefined(destSentence.terms))
{return 0;}
var totaldistance=0;var processedTokens={};var totaldistance=0;for(var key in sourceSentence.terms)
{if(IsDefined(processedTokens[key]))
{continue;}
processedTokens[key]=true;var sourceSentTermFreq=IsDefined(sourceSentence.terms[key])?sourceSentence.terms[key].weight:0;var destSentTermFreq=IsDefined(destSentence.terms[key])?destSentence.terms[key].weight:0;totaldistance+=(Math.pow(sourceSentTermFreq-destSentTermFreq,2));}
for(var key in destSentence.terms)
{if(IsDefined(processedTokens[key]))
{continue;}
processedTokens[key]=true;var sourceSentTermFreq=IsDefined(sourceSentence.terms[key])?sourceSentence.terms[key].weight:0;var destSentTermFreq=IsDefined(destSentence.terms[key])?destSentence.terms[key].weight:0;totaldistance+=(Math.pow(sourceSentTermFreq-destSentTermFreq,2));}
return Math.sqrt(totaldistance);};ExtractDocuments(quotes)
{if(!IsDefined(quotes))
{return null;}
if(quotes.length==0)
{return[];}
var docFrequencies={};var result=[];for(var index in quotes)
{if(!IsNullOREmpty(quotes[index]))
{var document=new Document();var tokens=this.ExtractNormlizedTokens(quotes[index],document,docFrequencies);result.push(document);}}
return result;};ExtractSentences(quote)
{if(IsNullOREmpty(quote))
{return null;}
var resultSentences=[];var sentences=quote.match(statmentDelimeters);var tmpSentence=null;var processedTokens=null;var isEndOfSentence=false;var isLastTokenNumber=false;var docFrequencies={};var tmpDocument=new Document();var lastToken=null;var counter=0;for(var sentenceIndex in sentences)
{if(!IsDefined(sentences[sentenceIndex].trim()))
{tmpDocument=null;continue;}
this.ExtractNormlizedTokens(sentences[sentenceIndex],tmpDocument,docFrequencies);if(tmpDocument.isEndedProperly)
{resultSentences.push(tmpDocument);tmpDocument=new Document();}}
return resultSentences;};ExtractNormlizedTokens(quote,document,docFrequencies)
{if(!IsDefined(document)||IsNullOREmpty(quote))
{return false;}
var isDocumentUpated=false;var tokens=quote.split(tokenDelimeters);document.value+=quote;var lastToken=null;for(var tokenIndex in tokens)
{var currentToken=tokens[tokenIndex];if(!IsDefined(currentToken)||IsNullOREmpty(currentToken))
{continue;}
lastToken=currentToken;if(stopWords[currentToken])
{continue;}
isDocumentUpated=true;var stemValue=memoizingStemmer(currentToken).toLowerCase();if(!IsDefined(document.terms[stemValue]))
{document.terms[stemValue]=new Token();document.terms[stemValue].value=currentToken;document.terms[stemValue].stem=stemValue;if(!IsDefined(docFrequencies[stemValue]))
{document.terms[stemValue].documentFreq=docFrequencies[stemValue]={value:0};}
else if(!IsDefined(document.terms[stemValue].documentFreq)){document.terms[stemValue].documentFreq=docFrequencies[stemValue];}
docFrequencies[stemValue].value+=1;}
document.terms[stemValue].weight=++document.terms[stemValue].frequency;document.length++;}
if(abbrevations[lastToken]){document.isEndedProperly=false;}
else{document.isEndedProperly=true;}
return isDocumentUpated;}
ApplyTf(documents,minTermWeight)
{if(!IsDefined(documents)||minTermWeight<0||documents.length==0)
{return false;}
for(var documentIndex in documents)
{var currentDocument=documents[documentIndex];var docLength=currentDocument.length;for(var termIndex in currentDocument.terms)
{var currentTerm=currentDocument.terms[termIndex];currentTerm.weight=currentTerm.frequency/docLength;if(currentTerm.weight<minTermWeight)
{delete currentDocument.terms[termIndex];currentDocument.length--;}}}
return true;}
ApplyTfIDf(documents,minTermWeight)
{if(!IsDefined(documents)||minTermWeight<0||documents.length==0)
{return false;}
var totalNumberOfDocs=documents.length;for(var statmentIndex in documents)
{var currentDocument=documents[statmentIndex];for(var termIndex in currentDocument.terms)
{var currentTerm=currentDocument.terms[termIndex];currentTerm.weight=((currentTerm.frequency/currentDocument.length)*Math.log10(totalNumberOfDocs/currentTerm.documentFreq.value));if(currentTerm.weight<minTermWeight)
{delete currentDocument.terms[termIndex];currentDocument.length--;}}}
return true;}
ExtractDisJointSet(documents,simThrShold)
{if(!IsDefined(documents)||simThrShold<0||documents.length==0)
{return null;}
var documentSet=new DisJointSet();var calculatedDistances={};for(var i=0;i<documents.length-1;++i)
{var totaldistance=0;var mainNodeParent;for(var s=i+1;s<documents.length;++s)
{var curretNodeParent=-1;mainNodeParent=documentSet.find(i);curretNodeParent=documentSet.find(s);var distance=-1;if(!IsDefined(calculatedDistances[i]))
{calculatedDistances[i]=0;}
if(!IsDefined(calculatedDistances[s]))
{calculatedDistances[s]=0;}
distance=this.GetDistance(documents[i],documents[s]);var inSameSet=false;if(curretNodeParent!=mainNodeParent)
{if(distance<=simThrShold)
{mainNodeParent=documentSet.join(i,s);documents[i].setIndex=mainNodeParent;documents[s].setIndex=mainNodeParent;calculatedDistances[i]+=distance;calculatedDistances[s]+=distance;inSameSet=true;}}
else{calculatedDistances[i]+=distance;calculatedDistances[s]+=distance;inSameSet=true;}
if(inSameSet)
{var biggerdistance=calculatedDistances[i]>calculatedDistances[s]?{index:i,value:calculatedDistances[i]}:{index:i,value:calculatedDistances[s]};documentSet.AssignSetHeader(mainNodeParent,biggerdistance.index,biggerdistance.value);}}}
return{SetsHeaader:documentSet.SetsHeaader};}}